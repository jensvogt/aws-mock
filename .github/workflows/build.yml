name: AWSMockBuild
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  build:
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v2.0.0
#      - name: Build project
#        run: cmake -E make_directory ${{github.workspace}}/build
#      - name: Configure CMake
#        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
#      - name: Build
#        run: cmake --build ./build --config Release
#      - name: Run tests
#        run: cd build && ctest -V
#      - name: Create docs
#        run: cd build && make docs
#      - name: Semantic release
#        run: git sv tag
#        with:
#          repo-token: ${{ secrets.GITHUB_TOKEN }}
#      - name: Build docker image
#        run: |
#          VERSION=$(cat VERSION)
#          cd docker
#          docker build -t aws-mock:$VERSION .

  tag:
    name: Tag
    runs-on: self-hosted
    needs: [ build ]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set GitHub Actions as commit author
        shell: bash
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: Create tag
        id: create-tag
        run: |
          git sv tag
          VERSION=$(git sv cv)
          echo "::set-output name=tag::v$VERSION"
    outputs:
      tag: ${{ steps.create-tag.outputs.tag }}

  release:
    name: Release
    runs-on: self-hosted
    needs: [ tag ]
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup sv4git
        run: |
          curl -s https://api.github.com/repos/bvieira/sv4git/releases/latest | jq -r '.assets[] | select(.browser_download_url | contains("linux")) | .browser_download_url' | wget -O /tmp/sv4git.tar.gz -qi - \
            && tar -C /usr/local/bin -xzf /tmp/sv4git.tar.gz

      - name: Create release notes
        run: |
          git sv rn -t "${{ needs.tag.outputs.tag }}" > release-notes.md

      - name: Build project
        run: cmake -E make_directory ${{github.workspace}}/build
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build ./build --config Release

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: release-notes.md
          tag_name: ${{ needs.tag.outputs.tag }}
          fail_on_unmatched_files: true
          files: |
            bin/git-sv_*