#
# Property file for the AWS cloud simulation
#

#
# General
#
# awsmock.region:                               AWS region
# awsmock.account.userPoolId:                   AWS account ID, default 000000000000
# awsmock.client.userPoolId:                    AWS client ID, default 00000000
# awsmock.user:                                 AWS user default none
# awsmock.data.dir:                             AwsMock base data dir
# awsmock.temp.dir:                             Temporary directory, used by some service
# awsmock.pretty:                               Pretty print output for XML and JSON
#
awsmock.region=eu-central-1
awsmock.account.userPoolId=000000000000
awsmock.client.userPoolId=00000000
awsmock.user=none
awsmock.data.dir=/home/awsmock/data
awsmock.temp.dir=/home/awsmock/data/tmp
awsmock.pretty=true

#
# Manager
#
# awsmock.manager.host:                         manager host, default localhost
# awsmock.manager.port:                         manager port, default 80
# awsmock.manager.max.queue:                    manager maximal queue length, default 250
# awsmock.manager.max.threads:                  manager maximal threads, default 50
#
awsmock.manager.host=localhost
awsmock.manager.port=4567
awsmock.manager.max.queue=250
awsmock.manager.max.threads=50

#
# Gateway
#
# awsmock.service.gateway.active:               activation flag
# awsmock.gateway.host:                         gateway host, default localhost
# awsmock.gateway.port:                         gateway port, default 80
# awsmock.gateway.max.queue:                    gateway maximal queue length, default 250
# awsmock.gateway.max.threads:                  gateway maximal threads, default 50
# awsmock.gateway.timeout:                      gateway request timeout in seconds, default 900
#
awsmock.service.gateway.active=true
awsmock.service.gateway.host=localhost
awsmock.service.gateway.port=4566
awsmock.service.gateway.max.queue=250
awsmock.service.gateway.max.threads=50
awsmock.service.gateway.timeout=900

#
# S3 service
#
# awsmock.service.s3.active                     Activation flag
# awsmock.service.s3.host:                      S3 host, default: localhost
# awsmock.service.s3.port:                      S3 port, default: 80
# awsmock.service.s3.max.queue:                 S3 maximal queue length, default: 250
# awsmock.service.s3.max.threads:               S3 maximal threads, default: 50
# awsmock.service.s3.timeout:                   S3 request timeout in seconds, default: 900
# awsmock.service.s3.monitoring.timeout:        S3 monitoring period in seconds, default: 300sec.
#
awsmock.service.s3.active=true
awsmock.service.s3.port=9500
awsmock.service.s3.host=localhost
awsmock.service.s3.max.queue=250
awsmock.service.s3.max.thread=50
awsmock.service.s3.timeout=900
awsmock.service.s3.monitoring.period=300

#
# SQS service
#
# awsmock.service.sqs.active                    Activation flag
# awsmock.service.sqs.http.host:                SQS host, default: localhost
# awsmock.service.sqs.http.port:                SQS port, default: 80
# awsmock.service.sqs.http.max.queue:           SQS maximal queue length, default: 250
# awsmock.service.sqs.http.max.threads:         SQS maximal threads, default: 50
# awsmock.service.sqs.http.timeout:             SQS request timeout in seconds, default: 900
# awsmock.service.sqs.hostname:                 SQS hostname to use for queue URLs
# awsmock.service.sqs.monitoring.period:        SQS monitoring period in seconds, default: 300sec.
# awsmock.service.sns.worker.period:            SQS maintenance worker period in seconds, default: 30sec.
#
awsmock.service.sqs.active=true
awsmock.service.sqs.http.port=9501
awsmock.service.sqs.http.host=localhost
awsmock.service.sqs.http.max.queue=250
awsmock.service.sqs.http.max.thread=50
awsmock.service.sqs.http.timeout=120
awsmock.service.sqs.hostname=localstack
awsmock.service.sqs.monitoring.period=300
awsmock.service.sqs.worker.period=30

#
# SNS service
#
# awsmock.service.sns.active                    Activation flag
# awsmock.service.sns.host:                     SNS host, default: localhost
# awsmock.service.sns.port:                     SNS port, default: 80
# awsmock.service.sns.max.queue:                SNS maximal queue length, default: 250
# awsmock.service.sns.max.threads:              SNS maximal threads, default: 50
# awsmock.service.sns.timeout:                  SNS request timeout in seconds, default: 900
# awsmock.service.sns.message.timeout:          SNS message timeout in days, default: 14
# awsmock.service.sns.hostname:                 SNS hostname to use for topics
# awsmock.service.sns.worker.period:            SNS maintenance worker period in seconds, default: 300sec.
# awsmock.service.sns.monitoring.period:        SNS monitoring period in seconds, default: 300sec.
#
awsmock.service.sns.active=true
awsmock.service.sns.http.port=9502
awsmock.service.sns.http.host=localhost
awsmock.service.sns.http.max.queue=250
awsmock.service.sns.http.max.thread=50
awsmock.service.sns.http.timeout=120
awsmock.service.sns.message.timeout=14
awsmock.service.sns.hostname=localstack
awsmock.service.sns.worker.period=300
awsmock.service.sns.monitoring.period=300

#
# Lambda module
#
# awsmock.service.lambda.active                 module activation
# awsmock.service.lambda.port                   port for the internal communication
# awsmock.service.lambda.host                   hostname of the FTP server
# awsmock.service.lambda.max.queue:             maximal queue length, default: 250
# awsmock.service.lambda.max.threads:           maximal threads, default: 50
# awsmock.service.lambda.timeout:               request timeout in seconds, default: 120
# awsmock.monitoring.lambda.period              monitoring polling period
#
awsmock.service.lambda.active=true
awsmock.service.lambda.port=9503
awsmock.service.lambda.host=localhost
awsmock.service.lambda.max.queue=250
awsmock.service.lambda.max.thread=50
awsmock.service.lambda.timeout=120
awsmock.monitoring.lambda.period=60000

#
# Transfer module
#
# awsmock.service.transfer.active               module activation
# awsmock.service.transfer.port                 port for the internal communication
# awsmock.service.transfer.host                 hostname of the FTP server
# awsmock.service.transfer.max.queue:           maximal queue length, default: 250
# awsmock.service.transfer.max.threads:         maximal threads, default: 50
# awsmock.service.transfer.timeout:             request timeout in seconds, default: 900
# awsmock.service.transfer.ftp.port:            port for the transfer FTP server, default 2121
# awsmock.service.transfer.bucket:              S3 bucket for the transfer server
# awsmock.service.transfer.monitoring.period:   Transfer monitoring period in seconds, default 300sec
#
awsmock.service.transfer.active=true
awsmock.service.transfer.port=9504
awsmock.service.transfer.host=localhost
awsmock.service.transfer.max.queue=250
awsmock.service.transfer.max.thread=50
awsmock.service.transfer.timeout=120
awsmock.service.transfer.ftp.port=2121
awsmock.service.transfer.bucket=transfer-server
awsmock.service.transfer.base.dir=/home/awsmock/data/transfer
awsmock.service.transfer.monitoring.period=300

#
# Cognito module
#
# awsmock.service.cognito.active                module activation
# awsmock.service.cognito.port                  port for the internal communication
# awsmock.service.cognito.host                  hostname of the FTP server
# awsmock.service.cognito.max.queue:            maximal queue length, default: 250
# awsmock.service.cognito.max.threads:          maximal threads, default: 50
# awsmock.service.cognito.timeout:              request timeout in seconds, default: 900
# awsmock.worker.cognito.timeout                polling period
#
awsmock.service.cognito.active=true
awsmock.service.cognito.port=9505
awsmock.service.cognito.host=localhost
awsmock.service.cognito.max.queue=250
awsmock.service.cognito.max.thread=50
awsmock.service.cognito.period=10000
awsmock.worker.cognito.timeout=120

#
# DynamoDB module
#
# awsmock.service.dynamodb.active               module activation
# awsmock.service.dynamodb.port                 port for the internal communication
# awsmock.service.dynamodb.host                 hostname of the FTP server
# awsmock.service.dynamodb.max.queue:           maximal queue length, default: 250
# awsmock.service.dynamodb.max.threads:         maximal threads, default: 50
# awsmock.service.dynamodb.monitoring.period    monitoring polling period, default: 300
# awsmock.dynamodb.port:                        port of the DynamoDB docker image
#
awsmock.service.dynamodb.active=true
awsmock.service.dynamodb.port=9506
awsmock.service.dynamodb.host=localhost
awsmock.service.dynamodb.max.queue=250
awsmock.service.dynamodb.max.thread=50
awsmock.service.dynamodb.monitoring.period=300
awsmock.dynamodb.port=8000

#
#
# awsmock.service.secretsmanager.active             module activation
# awsmock.service.secretsmanager.port               port for the internal communication
# awsmock.service.secretsmanager.host               hostname of the FTP server
# awsmock.service.secretsmanager.max.queue:         maximal queue length, default: 250
# awsmock.service.secretsmanager.max.threads:       maximal threads, default: 50
# awsmock.service.secretsmanager.timeout:           request timeout in seconds, default: 900
# awsmock.service.secretsmanager.monitoring.period: monitoring period in seconds, default: 300
#
awsmock.service.secretsmanager.active=true
awsmock.service.secretsmanager.port=9507
awsmock.service.secretsmanager.host=localhost
awsmock.service.secretsmanager.max.queue=250
awsmock.service.secretsmanager.max.thread=50
awsmock.service.secretsmanager.period=10000
awsmock.worker.secretsmanager.timeout=120
awsmock.service.secretsmanager.monitoring.period=300

#
# KMS service
#
# awsmock.service.kms.active                    Activation flag
# awsmock.service.kms.http.host:                KMS host, default: localhost
# awsmock.service.kms.http.port:                KMS port, default: 80
# awsmock.service.kms.http.max.queue:           KMS maximal queue length, default: 250
# awsmock.service.kms.http.max.threads:         KMS maximal threads, default: 50
# awsmock.service.kms.http.timeout:             KMS request timeout in seconds, default: 900
# awsmock.service.kms.hostname:                 KMS hostname to use for queue URLs
# awsmock.service.kms.monitoring.period:        KMS monitoring period in seconds, default: 300sec.
# awsmock.service.sns.worker.period:            KMS maintenance worker period in seconds, default: 30sec.
#
awsmock.service.kms.active=true
awsmock.service.kms.http.port=9508
awsmock.service.kms.http.host=localhost
awsmock.service.kms.http.max.queue=250
awsmock.service.kms.http.max.thread=50
awsmock.service.kms.http.timeout=120
awsmock.service.kms.hostname=localstack
awsmock.service.kms.monitoring.period=300
awsmock.service.kms.worker.period=3600

#
# Docker module
#
# awsmock.docker.network.mode:                  docker network mode [bridge|host]
# awsmock.docker.network.name:                  docker internal network name
# awsmock.docker.default.memory.size:           docker default memory size
# awsmock.docker.default.temp.size:             docker temp disk space
# awsmock.docker.container.port:                docker internal container port [8080]
#
awsmock.docker.network.mode=bridge
awsmock.docker.network.name=.dockerhost.net
awsmock.docker.default.memory.size=512
awsmock.docker.default.temp.size=10240
awsmock.docker.container.port=8080

#
# FTP module
#
# awsmock.service.ftp.port:                     FTP default port
# awsmock.service.ftp.host:                     FTP host
# awsmock.service.ftp.max.thread:               Maximal number concurrent threads
# awsmock.service.ftp.base.dir:                 Base directory for all users
#
awsmock.service.ftp.port=2121
awsmock.service.ftp.host=localhost
awsmock.service.ftp.max.thread=4
awsmock.service.ftp.base.dir=/home/awsmock/data/transfer

#
# MongoDB Database
#
# awsmock.mongodb.active:                       if true run with mongodb, otherwise run with in-memory database
# awsmock.mongodb.name:                         database name of the mongodb database
# awsmock.mongodb.host:                         database host name of the mongodb instance
# awsmock.mongodb.port:                         database port of the mongodb instance
# awsmock.mongodb.user:                         database user of the mongodb instance
# awsmock.mongodb.password:                     database password of the mongodb instance
# awsmock.mongodb.pool.size:                    connection pool size
#
awsmock.mongodb.active=true
awsmock.mongodb.name=awsmock
awsmock.mongodb.host=localhost
awsmock.mongodb.port=27017
awsmock.mongodb.user=admin
awsmock.mongodb.password=admin
awsmock.mongodb.pool.size=64

#
# Prometheus Monitoring
#
# awsmock.monitoring.port:                      prometheus port
# awsmock.monitoring.timeout:                   monitoring timeout
#
awsmock.monitoring.port=9091
awsmock.monitoring.timeout=60000

#
# Logging
#
# awsmock.log.level:                            logging level, default: debug, valid: none,fatal,error,warning,info,debug,verbose
#
awsmock.log.level=info
